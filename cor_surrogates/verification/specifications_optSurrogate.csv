Steps in algorithm,Definition,Parameters,Value/Derivation,Details
Prep to run CV-Superlearner,,,,
Input dataset,practice_data_with_riskscore.csv ,,,
Baseline demographic risk variables considered in surrogate analysis (input),"risk_score, HighRiskInd, MinorityInd",,,
Endpoint  (input),EventIndPrimaryD57,,,
Create the phase 1 dataset (dat.ph1),"All ptids in the vaccine arm AND as ""per protocol"". Drop records with missing values for Ptid, Trt, baseline risk variables, endpoint and wt columns.",,"               
         ",
Create new variable:  Delta57overBbindSpike_2fold,,,"if Day57bindSpike is greater than  (BbindSpike + log10(2))  then 1, else 0.","Similarly create Delta57overBbindRBD_2fold, Delta57overBpseudoneutid50_2fold,  Delta57overBpseudoneutid80_2fold, Delta57overBliveneutmn50_2fold
         Delta57overBliveneutmn50_2fold, Delta57overBliveneutmn50_4fold, Delta57overBliveneutmn50 "
Create new variable:   Delta57overBbindSpike_4fold,,,"if Day57bindSpike is greater than  (BbindSpike + log10(4))  then 1, else 0.","Similarly create Delta57overBbindRBD_4fold, Delta57overBpseudoneutid50_4fold, Delta57overBpseudoneutid80_4fold, Delta57overBliveneutmn50_4fold"
Create new variable:  Delta57overBliveneutmn50 ,,,Day57liveneutmn50 / Bliveneutmn50,
Drop records with missing values,,,"Remove records with missing values for Ptid, Trt, any baseline risk factors, endpoint, and wt.D57.   Arrange records such that all cases are on top.",
Create the phase 2 dataset (dat.ph2),,,"Keep records from dat.ph1  that have  TwophasesampIndD57 value of 1.   Drop records that have missing values (NAs) for markers  Day57bindSpike, Day57bindRBD,  Day57pseudoneutid50,  Day57pseudoneutid80, and Day57liveneutmn50.  Arrange records such that all cases are on top.",
Identify   nv,Total cases (defined by endpoint) in phase 2 dataset,,,
Create Z_plus_weights dataframe,vimp package needs this as input to adjust weights for phase 2 data analysis.,,"Select  Ptid,  endpoint,  wt.D57, Trt, and  baseline risk factors  from  dat.ph1.   Drop any records  with NA values in Ptid, Trt, briskfactors, endpoint or wt.D57",
"Create combination scores using  Day57bindSpike, Day57bindRBD, Day57pseudoneutid50, Day57pseudoneutid80 and  Day57liveneutmn50 markers.",,,Get linear PC1 and PC2  ,"Use markers Day57bindSpike, Day57bindRBD, Day57pseudoneutid50, Day57pseudoneutid80, Day57liveneutmn50 to derive PC1 and PC2 for phase 2 data. Scale each marker to have mean 0, sd 1.  Use covariance function on scaled matrix of markers with default arguments. Use eigen function with default arguments on covariance matrix and consider only eigen vectors 1 and 2. Reverse them (mutiply by -1). Multiply matrix of scaled markers with eigen vectors 1  and 2 to derive PC1 and PC2 respectively."
,,,"Get non-linear PC1 and PC2.  Use reticulate, kyotil and FSDAM packages in R. And kyotil::INT  function. ","Drop non-linear PC1 and PC2 for now. Scicomp is still trying to configure reticulate and python issue here.  When Scicomp configures the issue, do the following:  Use markers Day57bindSpike, Day57bindRBD, Day57pseudoneutid50, Day57pseudoneutid80, Day57liveneutmn50 to derive PC1 and PC2 for phase 2 data.  Scale markers to have sd 1.   Use scaled matrix as input in FSDAM::fsdam function with argument opt_numCode = 2 to obtain fit.  Use kyotil::INT  function  with fit$code[,1]  argument to obtain non-linear PC1 score. Similarly, use kyotil::INT  function  with fit$code[,2]  argument to obtain non-linear PC2 score."
,,,Get maximum signal diversity score ,"Use markers Day57bindSpike, Day57bindRBD, Day57pseudoneutid50, Day57pseudoneutid80, Day57liveneutmn50 to derive maximum signal diversity score for phase 2 data. Scale markers to have sd 1. Compute pairwise correlations between all markers using cor function and method = ""spearman"". Use correlation matrix as input to the mdw::tree.weight function with plot=FALSE argument to derive marker weights.  Multiply each scaled marker with the weights and take the rowSums across the 5 marker values to obtain the maximum signal diversity score for each subject.  "
,,,,
Create 12 variable sets ,,,"1. Baseline risk factors
2. Baseline risk factors and the bAb anti-Spike markers,  3. Baseline risk factors and the bAb anti-RBD markers,  4. Baseline risk factors and the pseudovirus-nAb ID50 markers,   5. Baseline risk factors and the pseudovirus-nAb ID80 markers,   6. Baseline risk factors and the live virus-nAb MN50 markers,   7. Baseline risk factors and the bAb markers and the pseudovirus-nAb ID50markers,   8. Baseline risk factors and the bAb markers and the pseudovirus-nAb ID80markers,   9. Baseline risk factors and the bAb markers and the live virus-nAb MN50markers,    10. Baseline risk factors and the bAb markers and the combination scores across the five markers [PCA1, PCA2, FSDAM1/FSDAM2 (the first two components of nonlinear PCA), and the maximum signal diversity score (He and Fong (2019)],   11. Baseline risk factors and all individual marker variables,    12. Baseline risk factors and all individual marker variables and all combination scores (full model)","In variable sets 10 and 12, the first two components of nonlinear PCA will be included as combination scores after Scicomp configures issue with reticulate package and python."
Create X using dat.ph2,,,Has only predictors as columns:  3 baseline risk factors and 25 marker predictors (total 28 predictors),
"Scale predictors in X to have mean 0, sd 1 ",,,,
Select predictors in X  based on the variable set considered for analysis,,,"Drop any column if it has 0 variance, and returned all NAN's from scale function. ",
Create Y vector which is the endpoint column of dat.ph2 dataset,,,,
Create weights vector which is the wt.D57 column of dat.ph2 dataset,,,,
Create SL.library,,,,
Create treatmentDAT dataframe,,,"Select   Ptid, Trt, wt.D57, endpoint,  all baseline risk factors and markers  from  dat.ph2  dataframe.  Keep only vaccinees and drop  Trt column. ",
Prep for AIPW adjustment in vimp package,,,Create all_cc_treatment  dataframe.  Use Z_plus_weights  and keep  ptids  that occur in treatmentDAT,
,,,Create all_non_cc_treatment  dataframe.  Use Z_plus_weights  and keep  ptids  that do not occur in treatmentDAT,
,,,Create ph1_data_treatmentDAT.  Bind  all_cc_treatment and  all_non_cc_treatment  dataframes (in that order). Drop Trt column.,
,,,Create Z_treatmentDAT.  Use ph1_data_treatmentDAT  and  drop  Ptid and wt.D57 columns,
,,,Create  all_ipw_weights_treatment  vector which is wt.D57 column in ph1_data_treatmentDAT. ,
,,,"Create C as a boolean vector: TRUE if  ph1_data_treatmentDAT$Ptid   is present in  treatmentDAT$Ptid, else FALSE",
,,,,
maxVar,The maximum number of variables that will be allowed by SL screens in the models,,"If total endpoints in dat.ph2  <= 25,  then maxVar = 5.  Else, maxVar =  floor(nv/6)",
Input to CV-SuperLearner run on vaccine  arm data (CV-SL fit),,,"For reproducibility of CV-Superlearner results,  use seed ""20210216""; use results from 10 random CV-SL runs by using seeds = round(runif(10, 1000, 10000))",
,,Y,outcome as vector derived from phase 2 dataset (dat_ph2),
,,X ,data frame containing only risk factors and markers selected in the variable set (scaled),
,,family ,binomial,
,,obsWeights,wt.D57  column in dat.ph2 dataframe,
,,SL.library,SL library created as below based off combination of learners and screens,
,,method ,method.CC_nloglik,
,,cvControl,"list of 2 where first is V = V_outer, and other is stratifyCV which is TRUE",V_outer is outer validation fold equal to 5. 
,,innerCvControl,list of list containing V = total folds for inner validation,"If total endpoints in dat.ph2  <= 25,  then  LOO.  Else,  V_inner = 5 "
,,vimp,FALSE,This is not used as parameter in the CV-SL call but could be used in post-processing if TRUE. 
,,LEARNERS,"SL.mean, SL.glm, SL.glmnet, SL.xgboost.2.no, SL.xgboost.4.no, SL.xgboost.2.yes, SL.xgboost.4.yes,
                SL.ranger.no, SL.ranger.yes",
,,SCREENS,"In all 4 screens, if total variables passing the screen > maxVar, then the variables are ranked by significance determined from a logistic regression of each variable with endpoint as outcome (upon adjusting for baseline risk factors), and the most significant variables are selected in the model.  All 4 screens are only run with SL.glm.  Other learners are used without screens. Also, the baseline risk factors are selected as TRUE in all screens by default. Additionally, univariate logistic pvalue adjusts for the baseline risk factors in the model. ",
,,1) screen_all ,No screen. ,
,,2) screen_glmnet                                                                  ,"set.seed(123)  and use following arguments in call to screen.glmnet:   alpha = 1, minscreen = 2, nfolds = 10, nlambda = 100",
,,3) screen_univariate_logistic_pval   ,"minPvalue = 0.1, minscreen = 2;    If number of variables with p-value less than minPvalue is less than minscreen, then issue warning and select the two variables with lowest minimum pvalue.",
,,4) screen_highcor_random  ,"if any two variables have Spearman correlation > 0.9, then choose any one of them at random by using sample function with replace = TRUE. In case of markers, give priority selection to markers as follows: Live MN50 marker > Pseudo ID80 or ID50 markers > Binding Ab markers",
,,,,
Derive CV-AUCs using measure_auc function in vimp package ,,fit,CV-SL fit,"1. For each of the 5 folds, call vimp::measure_auc  using  following arguments: fitted_values (predictions), Y, full_y = Y (complete Y vector from phase 1), C = C, Z= Z,  ipc_weights = weights and  ipc_fit_type = ""SL"", where,
a. 	C is a vector: the indicator of being observed in phase 2 (1) or not (0).  
b. 	Z  is as above
2. 	The estimate of AUC (est) is the average of the point estimates of AUC for the 5 folds
3. 	The variance is the average of the  averages  of the squares of the eifs (estimated influence functions)  for the 5 folds. (In short, take mean of the squares of the eifs within each fold and take averages of the 5 values.) 
4. 	The se is the square root of the variance divided by the number of phase 1 observations. 
5. 	Calculate 95% CI for AUC using  vimp::vimp_ci function using following arguments:  est, se, scale =”identity”, and level = 0.95"
,,scale ,identity,
,,weights,all_weights,
,,C,"Create C as above: a boolean vector: TRUE if  ph1_data_treatmentDAT$Ptid   is present in  treatmentDAT$Ptid, else FALSE",
,,Z,Z_treatmentDAT,
,,SL.library ,SL.glm,
,,ipc_est_type,"""ipw""",
,,family,"""gaussian""",
,,,,
Validate CV-AUCs and 95% CIs for each Learner-Screen combination!,,,,
,,,,
Run Superlearner on phase 2 vaccine arm data (SL_fit),,Y,outcome as vector,
,,X ,risk variables as data frame,
,,family ,binomial,
,,SL.library,SL library created by sl_screens.R,
,,method ,method.CC_nloglik,
,,,,
Prepare phase 1 vaccine arm data to perform predictions,,,,
Input dataset,Same as above ,,,
Baseline risk factors (input),Same as above ,,,
Endpoint  (input),Same as above ,,,
Create the phase 1 dataset (ph1_vaccine),"All ptids in the vaccine arm AND as ""per protocol"". Drop records with missing values for Ptid, Trt, and endpoint columns.",,,
Identify   maxVar,Same as above ,,,
Conduct imputations on missing values in predictors using mice package,,,"Use n.imp = 10, use seed ""20210216"",  and use the first imputation by default. Rest of details same as above.",
"Scale all predictor variables to have mean 0, sd 1 ",,,,
,,,,
Predict probability of outcome using SuperLearner,This is done only for ptids present in phase 1 vaccine arm ,Vaccine arm (phase 2),Derive CV-predictions from only the first random seed (run) of CV-SL fit object ,
,,Vaccine arm (not in phase 2),Derive prediction using SuperLearner model trained on vaccine arm data (SL_fit),
,,,,
Validate CV-AUCs!,,,,
,,,,
"Info on computing platform, R version",,,,
Computing platform,x86_64-pc-linux-gnu (64-bit)    [Ubuntu 18.04.4 LTS],,,
R module loaded on rhino cluster at Hutch,ml fhR/4.0.2-foss-2019b,,,
,,,,
Version no. of R packages,,,,
COVIDcorr  data package ,2021.1.26,,,
tidyverse,1.3.0,,,
methods,4.0.2,,,
SuperLearner,2.0.26,,,
e1071,1.7.3,,,
glmnet,4.0.2,,,
argparse,2.0.1,,,
vimp,2.2.1,,,
nloptr,1.2.2.1,,,
RhpcBLASctl,0.20.137,,,
mice,3.9.0,,,
